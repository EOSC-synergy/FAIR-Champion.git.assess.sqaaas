{
    "meta": {
        "version": "3.2.1",
        "report_json_url": "https://raw.githubusercontent.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas/master/.report/assessment_output.json"
    },
    "repository": [
        {
            "url": "https://github.com/OSTrails/FAIR-Champion.git",
            "name": "OSTrails/FAIR-Champion",
            "tag": "master",
            "commit_id": "c6203ccf6cd2661a936bea594fd95edaceb39282",
            "is_main_repo": true,
            "avatar_url": "https://avatars.githubusercontent.com/u/162346243?v=4",
            "description": null,
            "languages": null,
            "topics": null,
            "stargazers_count": null,
            "watchers_count": null,
            "contributors_count": null,
            "forks_count": null,
            "badge_status": "no_badge"
        }
    ],
    "report": {
        "QC.Acc": {
            "valid": true,
            "subcriteria": {
                "QC.Acc01": {
                    "description": "Is the source code managed with a Version Control System?",
                    "requirement_level": "MUST",
                    "hint": "The source code shall be managed with Git and remain publicly available for this criterion to be successful. Please check <a href=\"https://git-scm.com/book/es/v2\" target=\"_blank\">Pro Git</a> docs about how to get started using Git tool. Guidelines provided by the most popular social coding platforms (<a href=\"https://docs.github.com/get-started\" target=\"_blank\">GitHub</a>, <a href=\"https://about.gitlab.com/get-started/\" target=\"_blank\">GitLab</a>) are also a good starting point",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Source code uses Git for version control",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": "scm",
                                "version": "2.34.1",
                                "docker": {
                                    "image": "bitnami/git:2.34.1",
                                    "reviewed": "2021-12-30"
                                },
                                "ci": {
                                    "name": "QC.Acc github.com/OSTrails/FAIR-Champion git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree "
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/34/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 1,
                "success_subcriteria": 1
            }
        },
        "QC.Doc": {
            "valid": false,
            "subcriteria": {
                "QC.Doc06.1": {
                    "description": "Is the software scope outlined in the code repository?",
                    "requirement_level": "MUST",
                    "hint": "A README file presents your software to the audience interested in your software project. Several online sites simplify the task of creating the README file, such as <a href=\"https://www.makeareadme.com/\" target=\"_blank\">Make a README</a> or <a href=\"https://readme.so/\" target=\"_blank\">readme.so</a> sites. Be sure to add it to the code repository's root path",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "A README file is present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Champion find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 406}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 406
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Doc06.3": {
                    "description": "Does the project establish a code of conduct for its participants?",
                    "requirement_level": "MUST",
                    "hint": "A CODE_OF_CONDUCT file sets the path for a constructive, respectful and positive atmosphere among all the contributors in your software project. Of course you can define your own, but in case you want to rely on external and widely-adopted code of conducts check out some of the most popular ones: <a href=\"https://contributor-covenant.org/\" target=\"_blank\">Contributor Covenant</a> or <a href=\"https://web.archive.org/web/20200330154000/http://citizencodeofconduct.org/\" target=\"_blank\">Citizen Code of Conduct</a>",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "A CODE_OF_CONDUCT file is not present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Champion find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 406}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 406
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": true
                },
                "QC.Doc06.2": {
                    "description": "Is there a clear path or guidelines on how to contribute to the code?",
                    "requirement_level": "MUST",
                    "hint": "A CONTRIBUTING file shall be present in the root path of the code repository describing the expected workflow to follow when adding contributions. Please check <a href=\"https://mozillascience.github.io/working-open-workshop/contributing/\" target=\"_blank\">Mozilla's guidelines</a> and <a href=\"https://github.com/github/docs/blob/main/CONTRIBUTING.md\" target=\"_blank\">GitHub's CONTRIBUTING.md example</a> to get inspired on how to write a good CONTRIBUTING file",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "A CONTRIBUTING file is not present in the code repository",
                            "plugin": {
                                "name": "report2sqaaas-plugin-find_doc_files",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "find_doc_files.py",
                                "lang": "Contribution-enabling Files",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Doc/Dockerfile",
                                    "reviewed": "2022-01-26"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Champion find_doc_files.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "find_doc_files.py --file_type all"
                                    ],
                                    "stdout_text": "{\"README\": [{\"file_name\": \"README.md\", \"size\": 406}], \"CODE_OF_CONDUCT\": [], \"CONTRIBUTING\": []}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/43/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "README": [
                                    {
                                        "file_name": "README.md",
                                        "size": 406
                                    }
                                ],
                                "CODE_OF_CONDUCT": [],
                                "CONTRIBUTING": []
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": true
                },
                "QC.Doc01.1": {
                    "description": "Are docs managed in the same repository as code?",
                    "requirement_level": "MAY",
                    "hint": "This subcriterion will succeed if the documentation files exist on the same repository as the source code, e.g. under a <code>docs/</code> folder",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Documentation resides in the same repository as code",
                            "plugin": {
                                "name": "report2sqaaas-plugin-boolean",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "git",
                                "lang": null,
                                "version": null,
                                "docker": null,
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Champion git",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "git rev-parse --is-inside-work-tree "
                                    ],
                                    "stdout_text": "true",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/52/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": true
                },
                "QC.Doc02.X": {
                    "description": "Are docs following a style for the Markdown markup language?",
                    "requirement_level": "MAY",
                    "hint": "When using a docs-as-code approach, the style of the markup language is being checked. SQAaaS relies on <a href=\"https://github.com/markdownlint/markdownlint/\" target=\"_blank\">markdownlint</a> for Markdown files and <a href=\"https://github.com/twolfson/restructuredtext-lint/\" target=\"_blank\">restructuredtext-lint</a> for reStructuredText",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "Docs are not fully compliant with markdownlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-markdownlint",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "markdownlint",
                                "lang": "Markdown",
                                "version": "0.11.0",
                                "docker": {
                                    "dockerfile": "QC.Doc/markdownlint/Dockerfile",
                                    "reviewed": "1970-01-01"
                                },
                                "ci": {
                                    "name": "QC.Doc github.com/OSTrails/FAIR-Champion markdownlint",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "mdl --json  ."
                                    ],
                                    "stdout_text": "[{\"filename\":\"./README.md\",\"line\":2,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":5,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":7,\"rule\":\"MD013\",\"aliases\":[\"line-length\"],\"description\":\"Line length\"},{\"filename\":\"./README.md\",\"line\":1,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./README.md\",\"line\":4,\"rule\":\"MD022\",\"aliases\":[\"blanks-around-headers\"],\"description\":\"Headers should be surrounded by blank lines\"},{\"filename\":\"./README.md\",\"line\":4,\"rule\":\"MD025\",\"aliases\":[\"single-h1\"],\"description\":\"Multiple top level headers in the same document\"},{\"filename\":\"./README.md\",\"line\":2,\"rule\":\"MD033\",\"aliases\":[\"no-inline-html\"],\"description\":\"Inline HTML\"},{\"filename\":\"./README.md\",\"line\":5,\"rule\":\"MD033\",\"aliases\":[\"no-inline-html\"],\"description\":\"Inline HTML\"},{\"filename\":\"./README.md\",\"line\":6,\"rule\":\"MD033\",\"aliases\":[\"no-inline-html\"],\"description\":\"Inline HTML\"}]",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/61/log?consoleFull"
                                },
                                "level": "RECOMMENDED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "./README.md": {
                                    "MD013": {
                                        "description": "Line length",
                                        "line": [
                                            2,
                                            5,
                                            7
                                        ]
                                    },
                                    "MD022": {
                                        "description": "Headers should be surrounded by blank lines",
                                        "line": [
                                            1,
                                            4
                                        ]
                                    },
                                    "MD025": {
                                        "description": "Multiple top level headers in the same document",
                                        "line": [
                                            4
                                        ]
                                    },
                                    "MD033": {
                                        "description": "Inline HTML",
                                        "line": [
                                            2,
                                            5,
                                            6
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 40,
                "total_subcriteria": 5,
                "success_subcriteria": 2
            }
        },
        "QC.Lic": {
            "valid": true,
            "subcriteria": {
                "QC.Lic01": {
                    "description": "Is code licensed to be freely used, modified and distributed by others?",
                    "requirement_level": "MUST",
                    "hint": "<p>Your source code repository shall be distributed under an open source license for this subcriterion to pass successfully. Be sure to have a license file present in the code repository matching the name <code>LICENSE</code> with optional extensions (depending on the format used): <code>[.md|.rst|.txt]</code>.</p><p>Valid licenses are any of those approved either by the <a href=\"https://opensource.org/licenses\" target=\"_blank\">Open Source Initiative</a> and/or the Free Software Foundation <a href=\"https://www.gnu.org/licenses/license-list.html\" target=\"_blank\"></a>. You can also check the <a href=\"https://choosealicense.com/\" target=\"_blank\">choosealicense.com</a> site</p>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "An Open Source license found in the code repository: MIT",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Champion licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2022 Mark Wilkinson\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2022 Mark Wilkinson\"},{\"filename\":\"fair-champion.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-champion'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'tests resources.'\\n  spec.description = 'test stuff.'\\n  spec.homepage = 'https://example.org'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 2.6.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2022 Mark Wilkinson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2022 Mark Wilkinson"
                                    },
                                    {
                                        "filename": "fair-champion.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-champion'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'tests resources.'\n  spec.description = 'test stuff.'\n  spec.homepage = 'https://example.org'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 2.6.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic01.1": {
                    "description": "Is LICENSE file placed in the root path of the code repository?",
                    "requirement_level": "MUST",
                    "hint": "Most social coding platforms require the license file to placed in the root path of the code repository, so it is a good practice to use this location by default. Allowed file names are <code>LICENSE</code>, <code>LICENSE.md</code>, <code>LICENSE.rst</code>, <code>LICENSE.txt</code>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "LICENSE file is visible at the root path of the code repository: LICENSE",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Champion licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2022 Mark Wilkinson\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2022 Mark Wilkinson\"},{\"filename\":\"fair-champion.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-champion'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'tests resources.'\\n  spec.description = 'test stuff.'\\n  spec.homepage = 'https://example.org'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 2.6.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2022 Mark Wilkinson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2022 Mark Wilkinson"
                                    },
                                    {
                                        "filename": "fair-champion.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-champion'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'tests resources.'\n  spec.description = 'test stuff.'\n  spec.homepage = 'https://example.org'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 2.6.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02": {
                    "description": "Does the code use a license approved by Open Source Initiative?",
                    "requirement_level": "MUST",
                    "hint": "The <a href=\"https://opensource.org/\" target=\"_blank\">Open Source Initiative (OSI)</a> sets out the requirements for software to be legally declared as Open Source. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI-approved licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is approved by the Open Source Initiative",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Champion licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2022 Mark Wilkinson\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2022 Mark Wilkinson\"},{\"filename\":\"fair-champion.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-champion'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'tests resources.'\\n  spec.description = 'test stuff.'\\n  spec.homepage = 'https://example.org'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 2.6.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2022 Mark Wilkinson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2022 Mark Wilkinson"
                                    },
                                    {
                                        "filename": "fair-champion.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-champion'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'tests resources.'\n  spec.description = 'test stuff.'\n  spec.homepage = 'https://example.org'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 2.6.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                },
                "QC.Lic02.1": {
                    "description": "Does the code use an Open Source Initiative's popular-recognized license?",
                    "requirement_level": "MAY",
                    "hint": "The Open Source Initiative (OSI) sets out the requirements for software to be legally declared as Open Source. OSI provides a list of popular licenses that shall match most of the demands. The license in use shall be in the list of <a href=\"https://opensource.org/license-list.html\" target=\"_blank\">OSI popular licenses</a> for this criterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "License MIT is listed under the Open Source Initiative popular category",
                            "plugin": {
                                "name": "report2sqaaas-plugin-licensee",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "licensee",
                                "lang": "license",
                                "version": "9.17.0",
                                "docker": {
                                    "image": "eoscsynergy/sqaaas-licensee:9.17.0",
                                    "reviewed": "2021-06-28"
                                },
                                "ci": {
                                    "name": "QC.Lic github.com/OSTrails/FAIR-Champion licensee",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "licensee detect . --confidence 60 --json "
                                    ],
                                    "stdout_text": "{\"licenses\":[{\"key\":\"mit\",\"spdx_id\":\"MIT\",\"meta\":{\"title\":\"MIT License\",\"source\":\"https://spdx.org/licenses/MIT.html\",\"description\":\"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\"how\":\"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\"using\":{\"Babel\":\"https://github.com/babel/babel/blob/master/LICENSE\",\".NET\":\"https://github.com/dotnet/runtime/blob/main/LICENSE.TXT\",\"Rails\":\"https://github.com/rails/rails/blob/master/MIT-LICENSE\"},\"featured\":true,\"hidden\":false,\"nickname\":null,\"note\":null},\"url\":\"http://choosealicense.com/licenses/mit/\",\"rules\":{\"permissions\":[{\"tag\":\"commercial-use\",\"label\":\"Commercial use\",\"description\":\"The licensed material and derivatives may be used for commercial purposes.\"},{\"tag\":\"modifications\",\"label\":\"Modification\",\"description\":\"The licensed material may be modified.\"},{\"tag\":\"distribution\",\"label\":\"Distribution\",\"description\":\"The licensed material may be distributed.\"},{\"tag\":\"private-use\",\"label\":\"Private use\",\"description\":\"The licensed material may be used and modified in private.\"}],\"conditions\":[{\"tag\":\"include-copyright\",\"label\":\"License and copyright notice\",\"description\":\"A copy of the license and copyright notice must be included with the licensed material.\"}],\"limitations\":[{\"tag\":\"liability\",\"label\":\"Liability\",\"description\":\"This license includes a limitation of liability.\"},{\"tag\":\"warranty\",\"label\":\"Warranty\",\"description\":\"This license explicitly states that it does NOT provide any warranty.\"}]},\"fields\":[{\"name\":\"year\",\"description\":\"The current year\"},{\"name\":\"fullname\",\"description\":\"The full name or username of the repository owner\"}],\"other\":false,\"gpl\":false,\"lgpl\":false,\"cc\":false}],\"matched_files\":[{\"filename\":\"LICENSE\",\"content\":\"MIT License\\n\\nCopyright (c) 2022 Mark Wilkinson\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\"content_hash\":\"4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9\",\"content_normalized\":\"permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\",\"matcher\":{\"name\":\"exact\",\"confidence\":100},\"matched_license\":\"MIT\",\"attribution\":\"Copyright (c) 2022 Mark Wilkinson\"},{\"filename\":\"fair-champion.gemspec\",\"content\":\"# frozen_string_literal: true\\n\\n# require_relative \\\"tests\\\"\\n\\nGem::Specification.new do |spec|\\n  spec.name = 'fair-champion'\\n  spec.version = 1\\n  spec.authors = ['Mark Wilkinson']\\n  spec.email = ['markw@illuminae.com']\\n\\n  spec.summary = 'tests resources.'\\n  spec.description = 'test stuff.'\\n  spec.homepage = 'https://example.org'\\n  spec.license = 'MIT'\\n  spec.required_ruby_version = '>= 2.6.0'\\n\\n  spec.metadata['allowed_push_host'] = 'https://example.com'\\n\\n  spec.metadata['homepage_uri'] = spec.homepage\\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\\n\\n  # Specify which files should be added to the gem when it is released.\\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\\n    `git ls-files -z`.split(\\\"\\\\x0\\\").reject do |f|\\n      (f == __FILE__) || f.match(%r{\\\\A(?:(?:test|spec|features)/|\\\\.(?:git|travis|circleci)|appveyor)})\\n    end\\n  end\\n  spec.bindir = 'exe'\\n  spec.executables = spec.files.grep(%r{\\\\Aexe/}) { |f| File.basename(f) }\\n  # spec.require_paths = []\\n\\n  # Uncomment to register a new dependency of your gem\\n  # spec.add_dependency \\\"example-gem\\\", \\\"~> 1.0\\\"\\n\\n  # For more information and examples about making a new gem, checkout our\\n  # guide at: https://bundler.io/guides/creating_gem.html\\nend\\n\",\"content_hash\":null,\"content_normalized\":null,\"matcher\":{\"name\":\"gemspec\",\"confidence\":90},\"matched_license\":\"MIT\",\"attribution\":null}]}",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/70/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {
                                "licenses": [
                                    {
                                        "key": "mit",
                                        "spdx_id": "MIT",
                                        "meta": {
                                            "title": "MIT License",
                                            "source": "https://spdx.org/licenses/MIT.html",
                                            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.",
                                            "how": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.",
                                            "using": {
                                                "Babel": "https://github.com/babel/babel/blob/master/LICENSE",
                                                ".NET": "https://github.com/dotnet/runtime/blob/main/LICENSE.TXT",
                                                "Rails": "https://github.com/rails/rails/blob/master/MIT-LICENSE"
                                            },
                                            "featured": true,
                                            "hidden": false,
                                            "nickname": null,
                                            "note": null
                                        },
                                        "url": "http://choosealicense.com/licenses/mit/",
                                        "rules": {
                                            "permissions": [
                                                {
                                                    "tag": "commercial-use",
                                                    "label": "Commercial use",
                                                    "description": "The licensed material and derivatives may be used for commercial purposes."
                                                },
                                                {
                                                    "tag": "modifications",
                                                    "label": "Modification",
                                                    "description": "The licensed material may be modified."
                                                },
                                                {
                                                    "tag": "distribution",
                                                    "label": "Distribution",
                                                    "description": "The licensed material may be distributed."
                                                },
                                                {
                                                    "tag": "private-use",
                                                    "label": "Private use",
                                                    "description": "The licensed material may be used and modified in private."
                                                }
                                            ],
                                            "conditions": [
                                                {
                                                    "tag": "include-copyright",
                                                    "label": "License and copyright notice",
                                                    "description": "A copy of the license and copyright notice must be included with the licensed material."
                                                }
                                            ],
                                            "limitations": [
                                                {
                                                    "tag": "liability",
                                                    "label": "Liability",
                                                    "description": "This license includes a limitation of liability."
                                                },
                                                {
                                                    "tag": "warranty",
                                                    "label": "Warranty",
                                                    "description": "This license explicitly states that it does NOT provide any warranty."
                                                }
                                            ]
                                        },
                                        "fields": [
                                            {
                                                "name": "year",
                                                "description": "The current year"
                                            },
                                            {
                                                "name": "fullname",
                                                "description": "The full name or username of the repository owner"
                                            }
                                        ],
                                        "other": false,
                                        "gpl": false,
                                        "lgpl": false,
                                        "cc": false
                                    }
                                ],
                                "matched_files": [
                                    {
                                        "filename": "LICENSE",
                                        "content": "MIT License\n\nCopyright (c) 2022 Mark Wilkinson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                                        "content_hash": "4c2c763d64bbc7ef2e58b0ec6d06d90cee9755c9",
                                        "content_normalized": "permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'software'), to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions: the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software. the software is provided 'as is', without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.",
                                        "matcher": {
                                            "name": "exact",
                                            "confidence": 100
                                        },
                                        "matched_license": "MIT",
                                        "attribution": "Copyright (c) 2022 Mark Wilkinson"
                                    },
                                    {
                                        "filename": "fair-champion.gemspec",
                                        "content": "# frozen_string_literal: true\n\n# require_relative \"tests\"\n\nGem::Specification.new do |spec|\n  spec.name = 'fair-champion'\n  spec.version = 1\n  spec.authors = ['Mark Wilkinson']\n  spec.email = ['markw@illuminae.com']\n\n  spec.summary = 'tests resources.'\n  spec.description = 'test stuff.'\n  spec.homepage = 'https://example.org'\n  spec.license = 'MIT'\n  spec.required_ruby_version = '>= 2.6.0'\n\n  spec.metadata['allowed_push_host'] = 'https://example.com'\n\n  spec.metadata['homepage_uri'] = spec.homepage\n  spec.metadata['source_code_uri'] = 'https://github.com/markwilkinson/FAIR-Champion'\n  spec.metadata['changelog_uri'] = 'https://github.com/markwilkinsonFAIR-Champion/blob/master/CHANGELOG.md'\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files = Dir.chdir(File.expand_path(__dir__)) do\n    `git ls-files -z`.split(\"\\x0\").reject do |f|\n      (f == __FILE__) || f.match(%r{\\A(?:(?:test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})\n    end\n  end\n  spec.bindir = 'exe'\n  spec.executables = spec.files.grep(%r{\\Aexe/}) { |f| File.basename(f) }\n  # spec.require_paths = []\n\n  # Uncomment to register a new dependency of your gem\n  # spec.add_dependency \"example-gem\", \"~> 1.0\"\n\n  # For more information and examples about making a new gem, checkout our\n  # guide at: https://bundler.io/guides/creating_gem.html\nend\n",
                                        "content_hash": null,
                                        "content_normalized": null,
                                        "matcher": {
                                            "name": "gemspec",
                                            "confidence": 90
                                        },
                                        "matched_license": "MIT",
                                        "attribution": null
                                    }
                                ]
                            }
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 4,
                "success_subcriteria": 4
            }
        },
        "QC.Sty": {
            "valid": false,
            "subcriteria": {
                "QC.Sty01": {
                    "description": "Is the software product following a style standard for Dockerfile files?",
                    "requirement_level": "MUST",
                    "hint": "Please check & solve the security weaknesses found by the linter tool",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Dockerfile files are compliant with hadolint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "hadolint",
                                "lang": "Dockerfile",
                                "version": "v2.8.0-0-g398770f-dirty",
                                "docker": {
                                    "image": "hadolint/hadolint:2.8.0-alpine",
                                    "reviewed": "2021-06-21"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Champion hadolint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "hadolint Dockerfile --failure-threshold error"
                                    ],
                                    "stdout_text": "Dockerfile:6 DL3009 \u001b[92minfo\u001b[0m: Delete the apt-get lists after installing something\nDockerfile:9 DL3008 \u001b[1m\u001b[93mwarning\u001b[0m: Pin versions in apt get install. Instead of `apt-get install <package>` use `apt-get install <package>=<version>`\nDockerfile:9 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.\nDockerfile:10 DL3008 \u001b[1m\u001b[93mwarning\u001b[0m: Pin versions in apt get install. Instead of `apt-get install <package>` use `apt-get install <package>=<version>`\nDockerfile:23 DL3059 \u001b[92minfo\u001b[0m: Multiple consecutive `RUN` instructions. Consider consolidation.",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/79/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": true,
                            "message": "JSON files are compliant with jsonlint standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "jsonlint",
                                "lang": "JSON",
                                "version": "1.6.3",
                                "docker": {
                                    "dockerfile": "QC.Sty/jsonlint/Dockerfile",
                                    "reviewed": "2021-11-23"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Champion jsonlint",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "jsonlint-cli \"**/*.json\""
                                    ],
                                    "stdout_text": "",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/88/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        },
                        {
                            "valid": false,
                            "message": "Ruby files are not fully compliant with rubocop standard",
                            "plugin": {
                                "name": "report2sqaaas-plugin-jenkins_exit_status",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "rubocop",
                                "lang": "Ruby",
                                "version": "1.36.0",
                                "docker": {
                                    "dockerfile": "QC.Sty/rubocop/Dockerfile",
                                    "reviewed": "2022-10-07"
                                },
                                "ci": {
                                    "name": "QC.Sty github.com/OSTrails/FAIR-Champion rubocop",
                                    "status": "FAILED",
                                    "stdout_command": [
                                        "rubocop"
                                    ],
                                    "stdout_text": "Inspecting 22 files\nCCWWCWCCCWCWWCWWWWWCCC\n\nOffenses:\n\nGemfile:37:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"openapi_parser\", \"~> 2.1\"\n    ^^^^^^^^^^^^^^^^\nGemfile:37:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"openapi_parser\", \"~> 2.1\"\n                      ^^^^^^^^\nGemfile:39:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"safe_yaml\", \"~> 1.0\"\n    ^^^^^^^^^^^\nGemfile:39:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ngem \"safe_yaml\", \"~> 1.0\"\n                 ^^^^^^^^\napp/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'swagger/blocks'\n^\napp/controllers/application_controller.rb:6:121: C: Layout/LineLength: Line is too long. [142/120]\n# DO NOT change the order of loading below.  The files contain executable code that builds the overall configuration before this module starts\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/application_controller.rb:12:1: C: Style/Documentation: Missing top-level documentation comment for class Swag.\nclass Swag < Sinatra::Application\n^^^^^^^^^^\napp/controllers/configuration.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'parseconfig'\n^\napp/controllers/configuration.rb:3:1: W: Lint/EmptyClass: Empty class detected.\nclass TestConfiguration ...\n^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/configuration.rb:45:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n  #warn $th.inspect\n  ^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ErrorModel.\nclass ErrorModel  \n^^^^^^^^^^^^^^^^\napp/controllers/models.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nclass ErrorModel  \n^\napp/controllers/models.rb:1:17: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\nclass ErrorModel  \n                ^^\napp/controllers/models.rb:5:20: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.\n    key :required, [:code, :message]\n                   ^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:16:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/controllers/models.rb:17:1: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between class definitions; found 2.\nclass NewSetInput\n^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:17:1: C: Style/Documentation: Missing top-level documentation comment for class NewSetInput.\nclass NewSetInput\n^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:21:20: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.\n    key :required, [:title, :description, :email, :tests]\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:93:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).\n#   end\n^^^^^^^\napp/controllers/models.rb:95:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).\n  # ...\n  ^^^^^\napp/controllers/models.rb:109:1: C: Style/Documentation: Missing top-level documentation comment for class TheChampion.\nclass TheChampion\n^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:111:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  swagger_path \"/\" do\n               ^^^\napp/controllers/models.rb:113:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :summary, \"Retrieve the interface for FAIR Champion\"\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:115:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :operationId, \"Champion_retrieve\"\n                        ^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:124:3: C: Metrics/BlockLength: Block has too many lines. [36/25]\n  swagger_path \"/sets\" do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:124:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  swagger_path \"/sets\" do\n               ^^^^^^^\napp/controllers/models.rb:126:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :summary, \"Retrieve the known Test Sets in this instance of the FAIR Champion\"\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:128:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :operationId, \"Champion_sets\"\n                        ^^^^^^^^^^^^^^^\napp/controllers/models.rb:137:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :description, \"Create a new Test Set\"\n                        ^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:138:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :operationId, \"Champion_create_set\"\n                        ^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:139:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :tags, \"createset\"\n                 ^^^^^^^^^^^\napp/controllers/models.rb:142:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      ]  \n       ^^\napp/controllers/models.rb:149:15: W: [Correctable] Lint/SymbolConversion: Unnecessary symbol conversion; use :$ref instead.\n          key :'$ref', :NewSetInput\n              ^^^^^^^\napp/controllers/models.rb:152:22: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      response 201 do  # created\n                     ^\napp/controllers/models.rb:158:15: W: [Correctable] Lint/SymbolConversion: Unnecessary symbol conversion; use :$ref instead.\n          key :'$ref', :ErrorModel\n              ^^^^^^^\napp/controllers/models.rb:163:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/controllers/models.rb:164:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  swagger_path \"/sets/{setid}\" do\n               ^^^^^^^^^^^^^^^\napp/controllers/models.rb:166:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :summary, \"Retrieve the test set numbered in the URL\"\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/models.rb:168:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      key :operationId, \"Champion_set\"\n                        ^^^^^^^^^^^^^^\napp/controllers/models.rb:214:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 0).\n    # end\n    ^^^^^\napp/controllers/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'erb'\n^\napp/controllers/routes.rb:3:1: C: Metrics/AbcSize: Assignment Branch Condition size for set_routes is too high. [<43, 183, 24> 189.5/17]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:3:1: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for set_routes is too high. [22/7]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:3:1: C: Metrics/MethodLength: Method has too many lines. [172/10]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:3:1: C: Metrics/PerceivedComplexity: Perceived complexity for set_routes is too high. [19/8]\ndef set_routes(classes: allclasses) ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/controllers/routes.rb:33:34: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    request.accept.each do |type|  # Sinatra::Request::AcceptEntry\n                                 ^\napp/controllers/routes.rb:47:37: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    @sets = c.get_sets(setid: setid)  # sets is a hash\n                                    ^\napp/controllers/routes.rb:63:3: C: Metrics/BlockLength: Block has too many lines. [28/25]\n  post '/champion/sets/' do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:65:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    warn \"PARAMS\", params.keys\n         ^^^^^^^^\napp/controllers/routes.rb:68:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      desc = params.fetch(:description, \"No Description\")\n                                        ^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:69:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      email = params.fetch(:email, \"nobody@anonymous.org\")\n                                   ^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:80:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/sets/#{result}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                             ^^^^^^^^^^^\napp/controllers/routes.rb:80:109: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/sets/#{result}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                                            ^^^^^\napp/controllers/routes.rb:80:121: C: [Correctable] Layout/LineLength: Line is too long. [158/120]\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/sets/#{result}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:96:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).\n    # ###########################################  ASSESSMENTS\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:98:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/controllers/routes.rb:122:24: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if params[:subject]  # for calls from the Web form\n                       ^\napp/controllers/routes.rb:123:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      subject = params[:subject] \n                                ^\napp/controllers/routes.rb:142:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/controllers/routes.rb:175:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    warn \"getting testid\", testid\n         ^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:179:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    warn \"got \", @tests.inspect\n         ^^^^^^\napp/controllers/routes.rb:198:24: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    if params[:openapi]  # for calls from the Web form\n                       ^\napp/controllers/routes.rb:199:29: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      api = params[:openapi] \n                            ^\napp/controllers/routes.rb:206:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    warn \"testid\", testid\n         ^^^^^^^^\napp/controllers/routes.rb:208:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/tests/#{testid}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                             ^^^^^^^^^^^\napp/controllers/routes.rb:208:110: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/tests/#{testid}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                                             ^^^^^\napp/controllers/routes.rb:208:121: C: [Correctable] Layout/LineLength: Line is too long. [159/120]\n    _status, _headers, body = call env.merge(\"PATH_INFO\" => \"/champion/tests/#{testid}\", 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/controllers/routes.rb:209:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    warn \"testid\", env.inspect\n         ^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:1:1: C: Naming/FileName: The name of this source file (GEN3-RDA-F1-1-2-3-4.rb) should use snake_case.\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'linkheaders/processor'\n^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [118/100]\nclass AllTests ...\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class AllTests.\nclass AllTests\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:16:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F1-1-2-3-4_TEST is too high. [<10, 25, 6> 27.59/17]\n  define_method('GEN3-RDA-F1-1-2-3-4_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:16:3: C: Metrics/BlockLength: Block has too many lines. [26/25]\n  define_method('GEN3-RDA-F1-1-2-3-4_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:16:3: C: Metrics/MethodLength: Method has too many lines. [26/10]\n  define_method('GEN3-RDA-F1-1-2-3-4_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:25:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n      next unless l.relation == 'cite-as'\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:31:29: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        if regex.match(guid) \n                            ^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:37:121: C: Layout/LineLength: Line is too long. [122/120]\n        metadata.comments << \"INFO: cite-as should be a persistent ID.  The identifier #{guid} did not match a known type\"\n                                                                                                                        ^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:38:121: C: Layout/LineLength: Line is too long. [276/120]\n        metadata.comments << \"INDETERMINATE:  Non-persistent metadata GUID found. This is an 'edge-case',and is not necessary for FAIR signposting scenarios.  Nevertheless, if you are certain that this identifier is persistent, please register the schema with FAIRsharing.org\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:61:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F1-1_TEST is too high. [<10, 22, 6> 24.9/17]\n  define_method('GEN3-RDA-F1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:61:3: C: Metrics/MethodLength: Method has too many lines. [24/10]\n  define_method('GEN3-RDA-F1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:75:29: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        if regex.match(guid) \n                            ^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:82:121: C: Layout/LineLength: Line is too long. [276/120]\n        metadata.comments << \"INDETERMINATE:  Non-persistent metadata GUID found. This is an 'edge-case',and is not necessary for FAIR signposting scenarios.  Nevertheless, if you are certain that this identifier is persistent, please register the schema with FAIRsharing.org\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:90:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:91:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:92:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).\n#----------------------------------------\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:108:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F1d-1_TEST is too high. [<11, 27, 6> 29.77/17]\n  define_method('GEN3-RDA-F1d-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:108:3: C: Metrics/BlockLength: Block has too many lines. [27/25]\n  define_method('GEN3-RDA-F1d-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:108:3: C: Metrics/MethodLength: Method has too many lines. [27/10]\n  define_method('GEN3-RDA-F1d-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:124:9: C: [Correctable] Style/Next: Use next to skip iteration.\n        if m = regex.match(guid) \n        ^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:124:14: W: [Correctable] Lint/AssignmentInCondition: Use == if you meant to do a comparison or wrap the expression in parentheses to indicate you meant to assign in a condition.\n        if m = regex.match(guid) \n             ^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:124:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        if m = regex.match(guid) \n                                ^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:132:121: C: Layout/LineLength: Line is too long. [272/120]\n        metadata.comments << \"INDETERMINATE:  Non-persistent data GUID found. This is an 'edge-case',and is not necessary for FAIR signposting scenarios.  Nevertheless, if you are certain that this identifier is persistent, please register the schema with FAIRsharing.org\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F1-1-2-3-4.rb:139:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.\napp/tests/GEN3-RDA-F2.rb:1:1: C: Naming/FileName: The name of this source file (GEN3-RDA-F2.rb) should use snake_case.\napp/tests/GEN3-RDA-F2.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'linkheaders/processor'\n^\napp/tests/GEN3-RDA-F2.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [161/100]\nclass AllTests ...\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class AllTests.\nclass AllTests\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:4:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/GEN3-RDA-F2.rb:5:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F2.rb:6:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F2.rb:7:19: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  #  three  tests:    \n                  ^^^^\napp/tests/GEN3-RDA-F2.rb:8:95: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  # 1:  Do any of the describedby links point to a document that contains dcat, dc, or schema;  \n                                                                                              ^^\napp/tests/GEN3-RDA-F2.rb:9:74: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  # 2:  does the promised encoding of that link match the actual content. \n                                                                         ^\napp/tests/GEN3-RDA-F2.rb:10:137: C: Layout/LineLength: Line is too long. [139/120]\n  # 3: Richness requirements for discoverability are name, description, creator, date  ( as per https://eosc-edmi.github.io/properties).   \n                                                                                                                                        ^^^\napp/tests/GEN3-RDA-F2.rb:10:137: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  # 3: Richness requirements for discoverability are name, description, creator, date  ( as per https://eosc-edmi.github.io/properties).   \n                                                                                                                                        ^^^\napp/tests/GEN3-RDA-F2.rb:14:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F2-3 is too high. [<8, 15, 3> 17.26/17]\n  define_method(\"GEN3-RDA-F2-3\") do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:14:3: C: Metrics/MethodLength: Method has too many lines. [14/10]\n  define_method(\"GEN3-RDA-F2-3\") do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:14:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-3\") do\n                ^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:15:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.test_guid = \"https://w3id.org/FAIR_Tests/Gen3/GEN3-RDA-F2-3\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:16:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.version = \"1.0\"\n                       ^^^^^\napp/tests/GEN3-RDA-F2.rb:25:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    result = send(\"GEN3-RDA-F2-3_TEST\", signposting)\n                  ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:26:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.\n    if result ...\n    ^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F2-3_TEST is too high. [<17, 93, 29> 98.89/17]\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:3: C: Metrics/BlockLength: Block has too many lines. [65/25]\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for GEN3-RDA-F2-3_TEST is too high. [29/7]\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:3: C: Metrics/MethodLength: Method has too many lines. [65/10]\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:3: C: Metrics/PerceivedComplexity: Perceived complexity for GEN3-RDA-F2-3_TEST is too high. [30/8]\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:32:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-3_TEST\") do |signposting|\n                ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:33:121: C: Layout/LineLength: Line is too long. [163/120]\n    metadata.comments << \"INFO: testing signposting metadata for sufficiently 'rich' discovery metadata (defined by EOSC-EDMI as name, description, creator, date)\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:37:29: C: [Correctable] Layout/SpaceInsideBlockBraces: Space between { and | missing.\n      reader.each_statement {|s| graph << s }\n                            ^^\napp/tests/GEN3-RDA-F2.rb:40:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    query = SPARQL.parse(\"SELECT distinct ?p WHERE { ?s ?p ?o } \")\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:41:17: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n    name = false; desc = false; creator = false; date = false\n                ^\napp/tests/GEN3-RDA-F2.rb:41:31: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n    name = false; desc = false; creator = false; date = false\n                              ^\napp/tests/GEN3-RDA-F2.rb:41:48: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.\n    name = false; desc = false; creator = false; date = false\n                                               ^\napp/tests/GEN3-RDA-F2.rb:44:58: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      if (result[:p] =~ %r{https?://schema\\.org/name}) || \n                                                         ^\napp/tests/GEN3-RDA-F2.rb:45:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/title}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:45:69: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/title}) || \n                                                                    ^\napp/tests/GEN3-RDA-F2.rb:46:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/title}) \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:46:59: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/title}) \n                                                          ^\napp/tests/GEN3-RDA-F2.rb:52:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: Unable to find a name/title\" unless name\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:55:67: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      if (result[:p] =~ %r{https?://schema\\.org/datePublished}) || \n                                                                  ^\napp/tests/GEN3-RDA-F2.rb:56:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://schema\\.org/dateCreated}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:56:62: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://schema\\.org/dateCreated}) || \n                                                             ^\napp/tests/GEN3-RDA-F2.rb:57:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://schema\\.org/dateModified}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:57:63: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://schema\\.org/dateModified}) || \n                                                              ^\napp/tests/GEN3-RDA-F2.rb:58:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/date}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:58:68: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/date}) || \n                                                                   ^\napp/tests/GEN3-RDA-F2.rb:59:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/issued}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:59:70: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/issued}) || \n                                                                     ^\napp/tests/GEN3-RDA-F2.rb:60:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/modified}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:60:72: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/modified}) || \n                                                                       ^\napp/tests/GEN3-RDA-F2.rb:61:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/date}) \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:61:58: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/date}) \n                                                         ^\napp/tests/GEN3-RDA-F2.rb:67:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: Unable to find a date\" unless date\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:69:60: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      if (result[:p] =~ %r{https?://schema\\.org/author}) || \n                                                           ^\napp/tests/GEN3-RDA-F2.rb:70:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://schema\\.org/creator}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:70:58: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://schema\\.org/creator}) || \n                                                         ^\napp/tests/GEN3-RDA-F2.rb:71:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://schema\\.org/publisher}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:71:60: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://schema\\.org/publisher}) || \n                                                           ^\napp/tests/GEN3-RDA-F2.rb:72:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/creator}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:72:71: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/creator}) || \n                                                                      ^\napp/tests/GEN3-RDA-F2.rb:73:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/creator}) ||\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:74:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/publisher}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:74:73: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/publisher}) || \n                                                                        ^\napp/tests/GEN3-RDA-F2.rb:75:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/publisher}) \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:75:63: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/publisher}) \n                                                              ^\napp/tests/GEN3-RDA-F2.rb:81:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: Unable to find a publisher/author\" unless creator\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:83:65: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      if (result[:p] =~ %r{https?://schema\\.org/description}) || \n                                                                ^\napp/tests/GEN3-RDA-F2.rb:84:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/description}) || \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:84:75: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/elements/1.1/description}) || \n                                                                          ^\napp/tests/GEN3-RDA-F2.rb:85:7: C: [Correctable] Layout/MultilineOperationIndentation: Align the operands of a condition in an if statement spanning multiple lines.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/description}) \n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:85:65: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      (result[:p] =~ %r{https?://purl.org/dc/terms/description}) \n                                                                ^\napp/tests/GEN3-RDA-F2.rb:91:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: Unable to find a description\" unless desc\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:93:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      metadata.comments << \"PASS: Sufficient metadata fields found\"\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:94:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return true\n      ^^^^^^\napp/tests/GEN3-RDA-F2.rb:96:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      metadata.comments << \"FAIL: insufficient discovery metadata fields\"\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:97:7: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n      return false\n      ^^^^^^\napp/tests/GEN3-RDA-F2.rb:101:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).\n# ---------------------------------------\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:103:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F2.rb:106:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-2\") do\n                ^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:107:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: testing signposting metadata to ensure that describedby link content type matches what is claimed\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:107:121: C: Layout/LineLength: Line is too long. [130/120]\n    metadata.comments << \"INFO: testing signposting metadata to ensure that describedby link content type matches what is claimed\"\n                                                                                                                        ^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:108:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.test_guid = \"https://w3id.org/FAIR_Tests/Gen3/GEN3-RDA-F2-2\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:109:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.version = \"1.0\"\n                       ^^^^^\napp/tests/GEN3-RDA-F2.rb:113:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    result = send(\"GEN3-RDA-F2-2_TEST\", encodedguid)\n                  ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:114:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.\n    if result ...\n    ^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:120:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F2-2_TEST is too high. [<9, 35, 7> 36.81/17]\n  define_method(\"GEN3-RDA-F2-2_TEST\") do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:120:3: C: Metrics/BlockLength: Block has too many lines. [28/25]\n  define_method(\"GEN3-RDA-F2-2_TEST\") do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:120:3: C: Metrics/MethodLength: Method has too many lines. [28/10]\n  define_method(\"GEN3-RDA-F2-2_TEST\") do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:120:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-2_TEST\") do |encodedguid|\n                ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:125:24: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    factory = p.factory  # LinkHeaders::LinkFactory\n                       ^\napp/tests/GEN3-RDA-F2.rb:126:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\napp/tests/GEN3-RDA-F2.rb:127:34: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    factory.all_links.each do |l| \n                                 ^\napp/tests/GEN3-RDA-F2.rb:128:33: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      next unless l.relation == \"describedby\"\n                                ^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:129:7: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n      next unless l.respond_to? 'type'\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:130:28: C: [Correctable] Style/RedundantRegexpArgument: Use string 'json+ld' as argument instead of regexp /json\\+ld/.\n      l.type = l.type.gsub(/json\\+ld/, \"ld+json\")  # bug in dataverse\n                           ^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:130:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      l.type = l.type.gsub(/json\\+ld/, \"ld+json\")  # bug in dataverse\n                                       ^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:130:50: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      l.type = l.type.gsub(/json\\+ld/, \"ld+json\")  # bug in dataverse\n                                                 ^\napp/tests/GEN3-RDA-F2.rb:133:9: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.\n        :method => :get,\n        ^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:134:9: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.\n        :url => l.href,\n        ^^^^^^^\napp/tests/GEN3-RDA-F2.rb:135:9: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.\n        :headers => {accept: l.type}\n        ^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:135:21: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.\n        :headers => {accept: l.type}\n                    ^\napp/tests/GEN3-RDA-F2.rb:135:36: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.\n        :headers => {accept: l.type}\n                                   ^\napp/tests/GEN3-RDA-F2.rb:138:30: C: [Correctable] Style/RegexpLiteral: Use // around regular expression.\n      content = content.gsub(%r{\\s*\\;.*}, \"\")\n                             ^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:138:36: C: [Correctable] Style/RedundantRegexpEscape: Redundant escape inside regexp literal\n      content = content.gsub(%r{\\s*\\;.*}, \"\")\n                                   ^^\napp/tests/GEN3-RDA-F2.rb:138:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      content = content.gsub(%r{\\s*\\;.*}, \"\")\n                                          ^^\napp/tests/GEN3-RDA-F2.rb:144:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        metadata.comments << \"FAIL: Declared content-type did not match returned content type\"\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:148:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"PASS: All declared content-types matched the returned content-types\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:152:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-F2.rb:155:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F2-1 is too high. [<8, 15, 3> 17.26/17]\n  define_method(\"GEN3-RDA-F2-1\") do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:155:3: C: Metrics/MethodLength: Method has too many lines. [14/10]\n  define_method(\"GEN3-RDA-F2-1\") do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:155:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-1\") do\n                ^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:156:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.test_guid = \"https://w3id.org/FAIR_Tests/Gen3/GEN3-RDA-F2-1\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:157:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.version = \"1.0\"\n                       ^^^^^\napp/tests/GEN3-RDA-F2.rb:166:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    result = send(\"GEN3-RDA-F2-1_TEST\", signposting)\n                  ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:167:5: C: [Correctable] Style/ConditionalAssignment: Use the return of the conditional for variable assignment and comparison.\n    if result ...\n    ^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:173:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-F2-1_TEST is too high. [<6, 32, 4> 32.8/17]\n  define_method(\"GEN3-RDA-F2-1_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:173:3: C: Metrics/MethodLength: Method has too many lines. [17/10]\n  define_method(\"GEN3-RDA-F2-1_TEST\") do |signposting| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:173:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  define_method(\"GEN3-RDA-F2-1_TEST\") do |signposting|\n                ^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:174:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: testing signposting metadata for schema.org, dcat, and dublin-core links\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:178:29: C: [Correctable] Layout/SpaceInsideBlockBraces: Space between { and | missing.\n      reader.each_statement {|s| graph << s }\n                            ^^\napp/tests/GEN3-RDA-F2.rb:180:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    query = SPARQL.parse(\"SELECT ?p WHERE { ?s ?p ?o } \")\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:182:121: C: Layout/LineLength: Line is too long. [204/120]\n      if (result[:p] =~ %r{https?://schema\\.org}) || (result[:p] =~ %r{https?://purl.org/dc/elements}) || (result[:p] =~ %r{https?://purl.org/dc/terms})  || (result[:p] =~ %r{https?://www.w3.org/ns/dcat})\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:182:153: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      if (result[:p] =~ %r{https?://schema\\.org}) || (result[:p] =~ %r{https?://purl.org/dc/elements}) || (result[:p] =~ %r{https?://purl.org/dc/terms})  || (result[:p] =~ %r{https?://www.w3.org/ns/dcat})\n                                                                                                                                                        ^\napp/tests/GEN3-RDA-F2.rb:182:155: C: [Correctable] Layout/SpaceAroundOperators: Operator || should be surrounded by a single space.\n      if (result[:p] =~ %r{https?://schema\\.org}) || (result[:p] =~ %r{https?://purl.org/dc/elements}) || (result[:p] =~ %r{https?://purl.org/dc/terms})  || (result[:p] =~ %r{https?://www.w3.org/ns/dcat})\n                                                                                                                                                          ^^\napp/tests/GEN3-RDA-F2.rb:183:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        metadata.comments << \"INFO: Found at least one link that uses a common discovery metadata standard\"\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:184:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        metadata.comments << \"PASS: Discovery metadata found\"\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:188:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"INFO: was unable to find any discovery metadata (checked for dublin core, schema.org, and dcat)\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:188:121: C: Layout/LineLength: Line is too long. [122/120]\n    metadata.comments << \"INFO: was unable to find any discovery metadata (checked for dublin core, schema.org, and dcat)\"\n                                                                                                                        ^^\napp/tests/GEN3-RDA-F2.rb:189:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    metadata.comments << \"FAIL: No metadata found that folllows a common discovery metadata format\"\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-F2.rb:190:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return false\n    ^^^^^^\napp/tests/GEN3-RDA-F2.rb:193:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.\napp/tests/GEN3-RDA-R1.rb:1:1: C: Naming/FileName: The name of this source file (GEN3-RDA-R1.rb) should use snake_case.\napp/tests/GEN3-RDA-R1.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'linkheaders/processor'\n^\napp/tests/GEN3-RDA-R1.rb:3:1: C: Metrics/ClassLength: Class has too many lines. [110/100]\nclass AllTests ...\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class AllTests.\nclass AllTests\n^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:18:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-R1-1_TEST is too high. [<13, 41, 19> 47.02/17]\n  define_method('GEN3-RDA-R1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:18:3: C: Metrics/BlockLength: Block has too many lines. [47/25]\n  define_method('GEN3-RDA-R1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:18:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for GEN3-RDA-R1-1_TEST is too high. [13/7]\n  define_method('GEN3-RDA-R1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:18:3: C: Metrics/MethodLength: Method has too many lines. [47/10]\n  define_method('GEN3-RDA-R1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:18:3: C: Metrics/PerceivedComplexity: Perceived complexity for GEN3-RDA-R1-1_TEST is too high. [15/8]\n  define_method('GEN3-RDA-R1-1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:41:121: C: Layout/LineLength: Line is too long. [125/120]\n      types += 1 # how many types?  Should be at least one for all signposting pages, should be at least two for an aboutpage\n                                                                                                                        ^^^^^\napp/tests/GEN3-RDA-R1.rb:105:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-R1.rb:122:3: C: Metrics/AbcSize: Assignment Branch Condition size for GEN3-RDA-R1-t1_TEST is too high. [<5, 50, 11> 51.44/17]\n  define_method('GEN3-RDA-R1-t1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:122:3: C: Metrics/BlockLength: Block has too many lines. [36/25]\n  define_method('GEN3-RDA-R1-t1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:122:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for GEN3-RDA-R1-t1_TEST is too high. [10/7]\n  define_method('GEN3-RDA-R1-t1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:122:3: C: Metrics/MethodLength: Method has too many lines. [36/10]\n  define_method('GEN3-RDA-R1-t1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:122:3: C: Metrics/PerceivedComplexity: Perceived complexity for GEN3-RDA-R1-t1_TEST is too high. [11/8]\n  define_method('GEN3-RDA-R1-t1_TEST') do |encodedguid| ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:127:12: C: [Correctable] Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.\n    unless r && r.body\n           ^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:144:24: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n      unless l.type =~ /\\S+\\/\\S+;?\\s*(\\S+)?/ \n                       ^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:144:45: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      unless l.type =~ /\\S+\\/\\S+;?\\s*(\\S+)?/ \n                                            ^\napp/tests/GEN3-RDA-R1.rb:149:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        warn \"LOOKUP FAILED\"\n             ^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:150:23: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        if (l.type =~ /application\\/vnd/) or (l.type =~ /application\\/priv/)\n                      ^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:150:43: C: [Correctable] Style/AndOr: Use || instead of or.\n        if (l.type =~ /application\\/vnd/) or (l.type =~ /application\\/priv/)\n                                          ^^\napp/tests/GEN3-RDA-R1.rb:150:57: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n        if (l.type =~ /application\\/vnd/) or (l.type =~ /application\\/priv/)\n                                                        ^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:151:121: C: Layout/LineLength: Line is too long. [161/120]\n          metadata.comments << 'WARN: The item type attribute is not registered with IANA, however, it is decalred as being a private type.  This is acceptable.'\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/GEN3-RDA-R1.rb:163:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-R1.rb:164:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/GEN3-RDA-R1.rb:164:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.\napp/tests/testserver.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'sinatra'\n^\napp/tests/testserver.rb:7:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/testserver.rb:16:1: C: Style/Documentation: Missing top-level documentation comment for class MyApp.\nclass MyApp < Sinatra::Application\n^^^^^^^^^^^\napp/tests/testserver.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.\napp/tests/testserver.rb:18:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/testserver.rb:27:29: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    json t.build_result_hash  # t contains the metadata object\n                            ^\napp/tests/testserver.rb:30:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/testserver.rb:31:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/testserver.rb:32:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/tools/constants.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule FspHarvester\n^\napp/tests/tools/constants.rb:2:22: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  ACCEPT_LD_HEADER = { 'Accept' => 'text/turtle, application/ld+json, application/rdf+xml, text/xhtml+xml, application/n3, application/rdf+n3, application/turtle, application/x-turtle, text/n3, text/turtle, text/rdf+n3, text/rdf+turtle, application/n-triples' }\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:2:121: C: Layout/LineLength: Line is too long. [261/120]\n  ACCEPT_LD_HEADER = { 'Accept' => 'text/turtle, application/ld+json, application/rdf+xml, text/xhtml+xml, application/n3, application/rdf+n3, application/turtle, application/x-turtle, text/n3, text/turtle, text/rdf+n3, text/rdf+turtle, application/n-triples' }\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:4:24: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  ACCEPT_STAR_HEADER = { 'Accept' => '*/*' }\n                       ^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:6:18: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  TEXT_FORMATS = { ...\n                 ^\napp/tests/tools/constants.rb:10:17: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  RDF_FORMATS = { ...\n                ^\napp/tests/tools/constants.rb:11:103: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    'jsonld' => ['application/ld+json', 'application/x-ld+json', 'application/vnd.schemaorg.ld+json'],  # NEW FOR DATACITE\n                                                                                                      ^\napp/tests/tools/constants.rb:11:121: C: Layout/LineLength: Line is too long. [122/120]\n    'jsonld' => ['application/ld+json', 'application/x-ld+json', 'application/vnd.schemaorg.ld+json'],  # NEW FOR DATACITE\n                                                                                                                        ^^\napp/tests/tools/constants.rb:21:17: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  XML_FORMATS = { ...\n                ^\napp/tests/tools/constants.rb:25:18: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  HTML_FORMATS = { ...\n                 ^\napp/tests/tools/constants.rb:29:18: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  JSON_FORMATS = { ...\n                 ^\napp/tests/tools/constants.rb:33:21: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  DATA_PREDICATES = [ ...\n                    ^\napp/tests/tools/constants.rb:64:32: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  SELF_IDENTIFIER_PREDICATES = [ ...\n                               ^\napp/tests/tools/constants.rb:73:16: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  GUID_TYPES = { ...\n               ^\napp/tests/tools/constants.rb:74:16: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'inchi' => Regexp.new(/^\\w{14}-\\w{10}-\\w$/),\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:75:14: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'doi' => Regexp.new(%r{^10.\\d{4,9}/[-._;()/:A-Z0-9]+$}i),\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:76:18: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'handle1' => Regexp.new(%r{^[^/]+/[^/]+$}i),\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:77:18: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'handle2' => Regexp.new(%r{^\\d{4,5}/[-._;()/:A-Z0-9]+$}i), # legacy style  12345/AGB47A\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:79:14: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'uri' => Regexp.new(%r{^\\w+:/?/?[^\\s]+$}),\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:80:14: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'ark' => Regexp.new(%r{^ark:/[^\\s]+$})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:82:24: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  PERSISTENTID_TYPES = { ...\n                       ^\napp/tests/tools/constants.rb:83:16: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'inchi' => Regexp.new(/^\\w{14}-\\w{10}-\\w$/),\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:84:14: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'doi' => Regexp.new(%r{^10.\\d{4,9}/[-._;()/:A-Z0-9]+$}i),\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:85:18: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'handle1' => Regexp.new(%r{^[^/]+/[^/]+$}i),\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:86:18: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'handle2' => Regexp.new(%r{^\\d{4,5}/[-._;()/:A-Z0-9]+$}i), # legacy style  12345/AGB47A\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:88:15: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'w3id' => Regexp.new(%r{^https://w3id.org/}),\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:89:15: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'purl' => Regexp.new(%r{^https?://purl.org/}),\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:90:14: C: [Correctable] Style/RedundantRegexpConstructor: Remove the redundant Regexp.new.\n    'ark' => Regexp.new(%r{^ark:/[^\\s]+$})\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/constants.rb:101:1: W: Lint/DuplicateBranch: Duplicate branch body detected.\nwhen /echo/i ...\n^^^^^^^^^^^^\napp/tests/tools/constants.rb:112:1: W: Lint/DuplicateBranch: Duplicate branch body detected.\nwhen /echo/i ...\n^^^^^^^^^^^^\napp/tests/tools/constants.rb:114:18: C: [Correctable] Style/SpecialGlobalVars: Prefer $LAST_READ_LINE from the stdlib 'English' module (don't forget to require it) over $_.\nwhen !(/rdf$/ =~ $_)\n                 ^^\napp/tests/tools/metadata_object.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'linkeddata'\n^\napp/tests/tools/metadata_object.rb:5:3: C: Style/Documentation: Missing top-level documentation comment for class TestingTools::MetadataObject.\n  class MetadataObject\n  ^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:8:47: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n                  :url_header_hash, :test_guid  # a hash of metadata # a RDF.rb graph of metadata  # an array of comments  # the type of GUID that was detected # will be an array of Net::HTTP::Response\n                                              ^\napp/tests/tools/metadata_object.rb:8:121: C: Layout/LineLength: Line is too long. [201/120]\n                  :url_header_hash, :test_guid  # a hash of metadata # a RDF.rb graph of metadata  # an array of comments  # the type of GUID that was detected # will be an array of Net::HTTP::Response\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:10:5: C: Metrics/AbcSize: Assignment Branch Condition size for initialize is too high. [<17, 6, 0> 18.03/17]\n    def initialize(id: 'urn:local:unidentified_metadata') # get a name from the \"new\" call, or set a default ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:10:5: C: Metrics/MethodLength: Method has too many lines. [17/10]\n    def initialize(id: 'urn:local:unidentified_metadata') # get a name from the \"new\" call, or set a default ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:10:59: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def initialize(id: 'urn:local:unidentified_metadata') # get a name from the \"new\" call, or set a default\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:12:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      @test_guid = \"\"\n                   ^^\napp/tests/tools/metadata_object.rb:25:121: C: Layout/LineLength: Line is too long. [152/120]\n      @url_header_hash = Hash.new(false) # the combinarion of URL and the accept headers, sha1 hashed, for quick lookup if it has already been processed\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:36:28: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n    def merge_rdf(triples) # incoming list of triples\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:59:3: C: Style/Documentation: Missing top-level documentation comment for class TestingTools::Cache.\n  class Cache\n  ^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:60:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.retrieveMetaObject(uri)\n             ^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:61:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      filename = (Digest::MD5.hexdigest uri) + '_meta'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:65:24: C: Security/MarshalLoad: Avoid using Marshal.load.\n        meta = Marshal.load(File.read(\"/tmp/#{filename}\"))\n                       ^^^^\napp/tests/tools/metadata_object.rb:73:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.cacheMetaObject(meta, uri)\n             ^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:74:18: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      filename = (Digest::MD5.hexdigest uri) + '_meta'\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:79:5: C: Metrics/AbcSize: Assignment Branch Condition size for checkRDFCache is too high. [<7, 17, 6> 19.34/17]\n    def self.checkRDFCache(body:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:79:5: C: Metrics/MethodLength: Method has too many lines. [18/10]\n    def self.checkRDFCache(body:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:79:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.checkRDFCache(body:)\n             ^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:92:25: C: Security/MarshalLoad: Avoid using Marshal.load.\n        graph = Marshal.load(File.read(\"#{filename}_graph\")) # unmarshal it\n                        ^^^^\napp/tests/tools/metadata_object.rb:94:121: C: Layout/LineLength: Line is too long. [124/120]\n          g << statement # need to do this because the unmarshalled object isn't entirely functional as an RDF::Graph object\n                                                                                                                        ^^^^\napp/tests/tools/metadata_object.rb:103:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeRDFCache(reader:, body:)\n             ^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:113:5: C: Metrics/AbcSize: Assignment Branch Condition size for checkCache is too high. [<5, 18, 4> 19.1/17]\n    def self.checkCache(uri, headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:113:5: C: Metrics/MethodLength: Method has too many lines. [16/10]\n    def self.checkCache(uri, headers) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:113:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.checkCache(uri, headers)\n             ^^^^^^^^^^\napp/tests/tools/metadata_object.rb:120:47: C: [Correctable] Style/AndOr: Use && instead of and.\n      if File.exist?(\"/tmp/#{filename}_head\") and File.exist?(\"/tmp/#{filename}_body\")\n                                              ^^^\napp/tests/tools/metadata_object.rb:122:24: C: Security/MarshalLoad: Avoid using Marshal.load.\n        head = Marshal.load(File.read(\"/tmp/#{filename}_head\"))\n                       ^^^^\napp/tests/tools/metadata_object.rb:123:24: C: Security/MarshalLoad: Avoid using Marshal.load.\n        body = Marshal.load(File.read(\"/tmp/#{filename}_body\"))\n                       ^^^^\napp/tests/tools/metadata_object.rb:125:28: C: Security/MarshalLoad: Avoid using Marshal.load.\n        all_uris = Marshal.load(File.read(\"/tmp/#{filename}_uri\")) if File.exist?(\"/tmp/#{filename}_uri\")\n                           ^^^^\napp/tests/tools/metadata_object.rb:132:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeToCache(uri, headers, head, body, all_uris)\n             ^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:135:22: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      headfilename = filename + '_head'\n                     ^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:136:22: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      bodyfilename = filename + '_body'\n                     ^^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:137:21: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      urifilename = filename + '_uri'\n                    ^^^^^^^^^^^^^^^^^\napp/tests/tools/metadata_object.rb:143:14: C: Naming/MethodName: Use snake_case for method names.\n    def self.writeErrorToCache(uri, headers)\n             ^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'csv'\n^\napp/tests/tools/test_helper.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class AllTests.\nclass AllTests\n^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:6:21: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  METADATA_SERVER = 'http://seek.cbgp.upm.es:9000/fsp-harvester-server/ld?guid='\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:7:17: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\n  LINK_SERVER = 'http://seek.cbgp.upm.es:9000/fsp-harvester-server/links?guid='\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:33:3: C: Metrics/AbcSize: Assignment Branch Condition size for rich_retrieve is too high. [<5, 40, 8> 41.1/17]\n  def rich_retrieve(url:, headers: ACCEPT_STAR_HEADER, method: :get, meta: @metadata) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:33:3: C: Metrics/MethodLength: Method has too many lines. [37/10]\n  def rich_retrieve(url:, headers: ACCEPT_STAR_HEADER, method: :get, meta: @metadata) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:39:47: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n                                              method: method,\n                                              ^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:44:45: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n                                            })\n                                            ^\napp/tests/tools/test_helper.rb:45:46: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      meta.all_uris |= [response.request.url]  # it's possible to call this method without affecting the metadata object being created by the harvester\n                                             ^\napp/tests/tools/test_helper.rb:45:121: C: Layout/LineLength: Line is too long. [151/120]\n      meta.all_uris |= [response.request.url]  # it's possible to call this method without affecting the metadata object being created by the harvester\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:49:30: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      if response.code == 203 \n                             ^\napp/tests/tools/test_helper.rb:50:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n        meta.add_warning([\"002\", url, headers])\n                          ^^^^^\napp/tests/tools/test_helper.rb:51:121: C: Layout/LineLength: Line is too long. [181/120]\n        meta.comments << \"WARN: Response is non-authoritative (HTTP response code: #{response.code}).  Headers may have been manipulated encountered when trying to resolve #{url}\\n\"\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:55:121: C: Layout/LineLength: Line is too long. [132/120]\n      warn \"EXCEPTION WITH RESPONSE! #{e.response.code} with response #{e.response}\\nfailed response headers: #{e.response.headers}\"\n                                                                                                                        ^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:56:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      meta.add_warning([\"003\", url, headers])\n                        ^^^^^\napp/tests/tools/test_helper.rb:58:7: C: [Correctable] Style/GuardClause: Use a guard clause (return false if (e.response.code == 500 or e.response.code == 404)) instead of wrapping the code inside a conditional expression.\n      if (e.response.code == 500 or e.response.code == 404)\n      ^^\napp/tests/tools/test_helper.rb:58:10: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.\n      if (e.response.code == 500 or e.response.code == 404)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:58:34: C: [Correctable] Style/AndOr: Use || instead of or.\n      if (e.response.code == 500 or e.response.code == 404)\n                                 ^^\napp/tests/tools/test_helper.rb:59:9: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n        return false\n        ^^^^^^\napp/tests/tools/test_helper.rb:66:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      meta.add_warning([\"003\", url, headers])\n                        ^^^^^\napp/tests/tools/test_helper.rb:70:5: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n    rescue Exception => e ...\n    ^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:72:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      meta.add_warning([\"003\", url, headers])\n                        ^^^^^\napp/tests/tools/test_helper.rb:79:3: C: Metrics/MethodLength: Method has too many lines. [18/10]\n  def iana_lookup(type:) ...\n  ^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:80:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    type.gsub!(/\\s*;.*/, \"\")\n                         ^^\napp/tests/tools/test_helper.rb:81:14: C: [Correctable] Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].\n    medias = %w{https://www.iana.org/assignments/media-types/application.csv ...\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:82:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/audio.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:83:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/font.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:84:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/image.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:85:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/message.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:86:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/model.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:87:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/multipart.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:88:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/text.csv\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:89:5: C: [Correctable] Layout/ArrayAlignment: Align the elements of an array literal if they span more than one line.\n    https://www.iana.org/assignments/media-types/video.csv}\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:98:5: C: [Correctable] Style/RedundantReturn: Redundant return detected.\n    return false\n    ^^^^^^\napp/tests/tools/test_helper.rb:101:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\napp/tests/tools/test_helper.rb:105:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.\n  def build_result_hash\n  ^^^^^^^^^^^^^^^^^^^^^\napp/tests/tools/test_helper.rb:105:3: C: Metrics/AbcSize: Assignment Branch Condition size for build_result_hash is too high. [<8, 21, 0> 22.47/17]\n  def build_result_hash ...\n  ^^^^^^^^^^^^^^^^^^^^^\nfair-champion.gemspec:5:1: W: [Correctable] Gemspec/RequireMFA: metadata['rubygems_mfa_required'] must be set to 'true'.\nGem::Specification.new do |spec| ...\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nfair-champion.gemspec:15:32: W: Gemspec/RequiredRubyVersion: required_ruby_version and TargetRubyVersion (3.0, which may be specified in .rubocop.yml) should be equal.\n  spec.required_ruby_version = '>= 2.6.0'\n                               ^^^^^^^^^^\nlib/champion_core.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'rest_client'\n^\nlib/champion_core.rb:10:3: C: Metrics/ClassLength: Class has too many lines. [194/100]\n  class Core ...\n  ^^^^^^^^^^\nlib/champion_core.rb:10:3: C: Style/Documentation: Missing top-level documentation comment for class Champion::Core.\n  class Core\n  ^^^^^^^^^^\nlib/champion_core.rb:13:14: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    TEST_HOST=ENV.fetch('TEST_HOST','https://tests.ostrails.eu/tests/').gsub(%r{/+$}, '')\n             ^\nlib/champion_core.rb:13:36: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.\n    TEST_HOST=ENV.fetch('TEST_HOST','https://tests.ostrails.eu/tests/').gsub(%r{/+$}, '')\n                                   ^\nlib/champion_core.rb:14:15: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    CHAMP_HOST=ENV.fetch('CHAMP_HOST', \"https://tools.ostrails.eu/champion\").gsub(%r{/+$}, '')\n              ^\nlib/champion_core.rb:14:40: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    CHAMP_HOST=ENV.fetch('CHAMP_HOST', \"https://tools.ostrails.eu/champion\").gsub(%r{/+$}, '')\n                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:15:17: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    GRAPHDB_USER= ENV.fetch('GRAPHDB_USER', 'champion')\n                ^\nlib/champion_core.rb:16:17: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    GRAPHDB_PASS=ENV.fetch('GRAPHDB_PASS', 'champion')\n                ^\nlib/champion_core.rb:17:17: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    GRAPHDB_HOST=ENV.fetch('GRAPHD_HOST', 'graphdb')  # relative on docker network\n                ^\nlib/champion_core.rb:17:53: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n    GRAPHDB_HOST=ENV.fetch('GRAPHD_HOST', 'graphdb')  # relative on docker network\n                                                    ^\nlib/champion_core.rb:18:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\n    GRAPHDB_REPONAME=ENV.fetch('GRAPHDB_REPONAME', 'champion')\n                    ^\nlib/champion_core.rb:19:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\nlib/champion_core.rb:20:5: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.\n    def initialize ...\n    ^^^^^^^^^^^^^^\nlib/champion_core.rb:21:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.\nlib/champion_core.rb:30:5: C: Metrics/AbcSize: Assignment Branch Condition size for run_assessment is too high. [<7, 18, 1> 19.34/17]\n    def run_assessment(subject:, setid:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:30:5: C: Metrics/MethodLength: Method has too many lines. [14/10]\n    def run_assessment(subject:, setid:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:44:49: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        test, *_nada = get_tests(testid: testid)   # returns an array of 1 element, so just get that into test\n                                                ^^\nlib/champion_core.rb:46:34: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n        _id, testdef = test.first  # there is only one, and it is guid => {features...}\n                                 ^\nlib/champion_core.rb:70:5: C: Metrics/AbcSize: Assignment Branch Condition size for get_sets is too high. [<24, 31, 6> 39.66/17]\n    def get_sets(setid: \"\") ...\n    ^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:70:5: C: Metrics/MethodLength: Method has too many lines. [54/10]\n    def get_sets(setid: \"\") ...\n    ^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:70:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    def get_sets(setid: \"\")\n                        ^^\nlib/champion_core.rb:82:23: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.\n      setgraphquery = if !setid.empty? # we want one graph ...\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:101:7: C: Metrics/BlockLength: Block has too many lines. [28/25]\n      graphs.each do |graph| ...\n      ^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:129:33: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n          tests: individualtests  # individualtests is the LOCAL identifier, not the test API!\n                                ^\nlib/champion_core.rb:143:5: C: Metrics/AbcSize: Assignment Branch Condition size for _build_set_record is too high. [<7, 18, 1> 19.34/17]\n    def _build_set_record(g:, title:, desc:, email:, tests:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:143:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def _build_set_record(g:, title:, desc:, email:, tests:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:143:27: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def _build_set_record(g:, title:, desc:, email:, tests:)\n                          ^\nlib/champion_core.rb:179:5: C: Metrics/AbcSize: Assignment Branch Condition size for get_tests is too high. [<8, 26, 3> 27.37/17]\n    def get_tests(testid: \"\") ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:179:5: C: Metrics/MethodLength: Method has too many lines. [31/10]\n    def get_tests(testid: \"\") ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:179:27: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n    def get_tests(testid: \"\")\n                          ^^\nlib/champion_core.rb:181:33: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n      testid = testid.to_s.gsub(/.*\\//, \"\")  # if we are sent the entire URI, then just take the identifier part at the end\n                                ^^^^^^\nlib/champion_core.rb:181:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      testid = testid.to_s.gsub(/.*\\//, \"\")  # if we are sent the entire URI, then just take the identifier part at the end\n                                        ^^\nlib/champion_core.rb:181:44: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n      testid = testid.to_s.gsub(/.*\\//, \"\")  # if we are sent the entire URI, then just take the identifier part at the end\n                                           ^\nlib/champion_core.rb:181:121: C: Layout/LineLength: Line is too long. [123/120]\n      testid = testid.to_s.gsub(/.*\\//, \"\")  # if we are sent the entire URI, then just take the identifier part at the end\n                                                                                                                        ^^^\nlib/champion_core.rb:191:16: C: [Correctable] Style/NegatedIfElseCondition: Invert the negated condition and swap the if-else branches.\n      sparql = if !testid.empty? ...\n               ^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:211:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      warn \"RESULT\", result.inspect\n           ^^^^^^^^\nlib/champion_core.rb:231:5: C: Metrics/AbcSize: Assignment Branch Condition size for _build_test_record is too high. [<10, 30, 0> 31.62/17]\n    def _build_test_record(yaml:, graph:, context:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/champion_core.rb:231:5: C: Metrics/MethodLength: Method has too many lines. [18/10]\n    def _build_test_record(yaml:, graph:, context:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module HTTPUtils.\nmodule HTTPUtils\n^^^^^^^^^^^^^^^^\nlib/http.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule HTTPUtils\n^\nlib/http.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [17/10]\n  def self.get(url:, headers: { accept: '*/*' }, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:4:70: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n  def self.get(url:, headers: { accept: '*/*' }, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy\n                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:4:121: C: Layout/LineLength: Line is too long. [139/120]\n  def self.get(url:, headers: { accept: '*/*' }, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^\nlib/http.rb:18:3: W: Lint/DuplicateBranch: Duplicate branch body detected.\n  rescue RestClient::Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:22:3: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n  rescue Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:29:3: C: Metrics/MethodLength: Method has too many lines. [17/10]\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:29:16: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [6/5]\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:29:23: C: [Correctable] Style/KeywordParametersOrder: Place optional keyword parameters at the end of the parameters list.\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:29:81: W: Lint/UnusedMethodArgument: Unused method argument - content_type.\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy\n                                                                                ^^^^^^^^^^^^\nlib/http.rb:29:102: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy\n                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:29:121: C: Layout/LineLength: Line is too long. [171/120]\n  def self.post(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '', content_type: :json) # username and password go into headers as user: xxx and password: yyy\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:43:3: W: Lint/DuplicateBranch: Duplicate branch body detected.\n  rescue RestClient::Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:47:3: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n  rescue Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:54:3: C: Metrics/MethodLength: Method has too many lines. [17/10]\n  def self.put(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:54:22: C: [Correctable] Style/KeywordParametersOrder: Place optional keyword parameters at the end of the parameters list.\n  def self.put(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:54:80: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the def keyword.\n  def self.put(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy\n                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:54:121: C: Layout/LineLength: Line is too long. [149/120]\n  def self.put(url:, headers: { accept: '*/*' }, payload:, user: '', pass: '') # username and password go into headers as user: xxx and password: yyy\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:68:3: W: Lint/DuplicateBranch: Duplicate branch body detected.\n  rescue RestClient::Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:72:3: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n  rescue Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:79:3: C: Metrics/MethodLength: Method has too many lines. [16/10]\n  def self.delete(url:, headers: { accept: '*/*' }, user: '', pass: '') ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:92:3: W: Lint/DuplicateBranch: Duplicate branch body detected.\n  rescue RestClient::Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:96:3: W: Lint/RescueException: Avoid rescuing the Exception class. Perhaps you meant to rescue StandardError?\n  rescue Exception => e ...\n  ^^^^^^^^^^^^^^^^^^^^^\nlib/http.rb:111:16: C: [Correctable] Style/ConcatArrayLiterals: Use push(l) instead of concat([l]).\n      prefixes.concat([l]) if l =~ /^@prefix/i\n               ^^^^^^^^^^^\nlib/http.rb:112:17: C: [Correctable] Style/ConcatArrayLiterals: Use push(l) instead of concat([l]).\n      bodylines.concat([l]) unless l =~ /^@prefix/i\n                ^^^^^^^^^^^\nlib/http.rb:115:18: C: [Correctable] Style/ConcatArrayLiterals: Use push(prefixes, bodylines) instead of concat([prefixes, bodylines]).\n    reintegrated.concat([prefixes, bodylines])\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nmodule Champion\n^\nlib/output.rb:2:3: C: Metrics/ClassLength: Class has too many lines. [122/100]\n  class Output ...\n  ^^^^^^^^^^^^\nlib/output.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class Champion::Output.\n  class Output\n  ^^^^^^^^^^^^\nlib/output.rb:9:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\nlib/output.rb:14:19: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [8/5]\n    def initialize(subject:, setid:, description: 'Results of the execution of test set', title: 'FAIR Champion output', version: '0.0.1', summary: 'Results of the execution of test set', ...\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:14:121: C: Layout/LineLength: Line is too long. [187/120]\n    def initialize(subject:, setid:, description: 'Results of the execution of test set', title: 'FAIR Champion output', version: '0.0.1', summary: 'Results of the execution of test set',\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:19:19: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      @uniqueid = 'urn:fairchampionoutput:' + SecureRandom.uuid\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:28:5: C: Metrics/AbcSize: Assignment Branch Condition size for build_output is too high. [<12, 56, 1> 57.28/17]\n    def build_output(results:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:28:5: C: Metrics/MethodLength: Method has too many lines. [34/10]\n    def build_output(results:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:31:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - xsd.\n      xsd = RDF::Vocab::XSD\n      ^^^\nlib/output.rb:32:27: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      dct = RDF::Vocab::DC \n                          ^\nlib/output.rb:33:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - prov.\n      prov = RDF::Vocab::PROV\n      ^^^^\nlib/output.rb:34:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - dcat. Did you mean dct?\n      dcat = RDF::Vocab::DCAT\n      ^^^^\nlib/output.rb:35:7: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - dqv.\n      dqv = RDF::Vocabulary.new('https://www.w3.org/TR/vocab-dqv/')\n      ^^^\nlib/output.rb:39:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\nlib/output.rb:56:27: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      championexecution = 'urn:fairchampionexecution:' + SecureRandom.uuid\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:64:13: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n      tid = \"urn:fairtestsetsubject:\" + SecureRandom.uuid\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:64:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      tid = \"urn:fairtestsetsubject:\" + SecureRandom.uuid\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:68:59: C: [Correctable] Style/RegexpLiteral: Use %r around regular expression.\n      triplify(tid, schema.url, subject, g) if subject =~ /^https?\\:\\/\\//\n                                                          ^^^^^^^^^^^^^^^\nlib/output.rb:68:67: C: [Correctable] Style/RedundantRegexpEscape: Redundant escape inside regexp literal\n      triplify(tid, schema.url, subject, g) if subject =~ /^https?\\:\\/\\//\n                                                                  ^^\nlib/output.rb:70:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.\nlib/output.rb:74:9: C: [Correctable] Layout/FirstHashElementIndentation: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.\n        xsd: RDF::Vocab::XSD, \n        ^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:74:30: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        xsd: RDF::Vocab::XSD, \n                             ^\nlib/output.rb:81:7: C: [Correctable] Layout/FirstHashElementIndentation: Indent the right brace the same as the first position after the preceding left parenthesis.\n      })\n      ^\nlib/output.rb:82:1: C: [Correctable] Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.\nlib/output.rb:85:5: C: Metrics/AbcSize: Assignment Branch Condition size for add_members is too high. [<8, 17, 3> 19.03/17]\n    def add_members(uniqueid:, testoutputs:, graph:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:85:5: C: Metrics/MethodLength: Method has too many lines. [15/10]\n    def add_members(uniqueid:, testoutputs:, graph:) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:92:27: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            g << statement  # this is only to query for the root id\n                          ^\nlib/output.rb:93:31: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            graph << statement  # this is the entire output graph\n                              ^\nlib/output.rb:98:9: C: [Correctable] Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.\n        return unless res && res.first\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:98:9: W: Lint/NonLocalExitFromIterator: Non-local exit from iterator, without return value. next, break, Array#find, Array#any?, etc. is preferred.\n        return unless res && res.first\n        ^^^^^^\nlib/output.rb:98:23: C: [Correctable] Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.\n        return unless res && res.first\n                      ^^^^^^^^^^^^^^^^\nlib/output.rb:104:5: C: Metrics/AbcSize: Assignment Branch Condition size for triplify is too high. [<9, 63, 27> 69.13/17]\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:104:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for triplify is too high. [23/7]\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:104:5: C: Metrics/MethodLength: Method has too many lines. [47/10]\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:104:5: C: Metrics/PerceivedComplexity: Perceived complexity for triplify is too high. [28/8]\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil) ...\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:104:22: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [6/5]\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:104:23: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil)\n                      ^\nlib/output.rb:104:26: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil)\n                         ^\nlib/output.rb:104:29: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n    def self.triplify(s, p, o, repo, datatype: nil, context: nil)\n                            ^\nlib/output.rb:109:23: C: [Correctable] Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.\n      return false if (s.to_s.empty? || p.to_s.empty? || o.to_s.empty? || repo.to_s.empty?)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:109:23: C: [Correctable] Style/RedundantParentheses: Don't use parentheses around a logical expression.\n      return false if (s.to_s.empty? || p.to_s.empty? || o.to_s.empty? || repo.to_s.empty?)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nlib/output.rb:136:72: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            elsif o.to_s =~ /^[+-]?\\d+\\.\\d+/ && o.to_s !~ /[^\\+\\-\\d\\.]/  # has to only be digits\n                                                                       ^\nlib/output.rb:138:71: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\n            elsif o.to_s =~ /^[+-]?[0-9]+$/ && o.to_s !~ /[^\\+\\-\\d\\.]/  # has to only be digits\n                                                                      ^\nlib/output.rb:151:12: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        end  \n           ^^\nlib/output.rb:155:11: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n      else        \n          ^^^^^^^^\nlib/output.rb:157:41: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n        triple = RDF::Statement(s, p, o)  \n                                        ^^\nspec/f-tests_dataverse_spec.rb:1:1: C: Naming/FileName: The name of this source file (f-tests_dataverse_spec.rb) should use snake_case.\nspec/f-tests_dataverse_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative 'spec_helper'\n^\nspec/f-tests_dataverse_spec.rb:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"rest-client\"\n        ^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:7:12: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:7:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:8:9: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-1-2-3-4?guid=\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-1-2-3-4?guid=\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:9:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:9:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:10:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:11:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:11:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:12:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:12:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:13:11: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:13:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n                     ^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:15:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nguid = \"10.7910/DVN/FJM7F4\"  #@ dataverse\n       ^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:15:28: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.\nguid = \"10.7910/DVN/FJM7F4\"  #@ dataverse\n                           ^\nspec/f-tests_dataverse_spec.rb:15:30: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\nguid = \"10.7910/DVN/FJM7F4\"  #@ dataverse\n                             ^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:16:1: C: Metrics/BlockLength: Block has too many lines. [75/25]\ndescribe \"DVTests\" do ...\n^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:16:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ndescribe \"DVTests\" do\n         ^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:17:3: C: Metrics/BlockLength: Block has too many lines. [73/25]\n  context \"FAIR CHampion F tests\" do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:17:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  context \"FAIR CHampion F tests\" do\n          ^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:18:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.\nspec/f-tests_dataverse_spec.rb:20:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      expect(\"yes\").not_to be nil\n             ^^^^^\nspec/f-tests_dataverse_spec.rb:50:35: W: [Correctable] Lint/AmbiguousOperator: Ambiguous negative number operator. Parenthesize the method arguments if it's surely a negative number operator, or add a whitespace to the right of the - if it should be a subtraction.\n      expect(json['score']).to eq -1\n                                  ^\nspec/f-tests_dataverse_spec.rb:63:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n    #50-rda-f1-01m-t1-metadata-pid\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_dataverse_spec.rb:80:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    end    \n       ^^^^\nspec/f-tests_dataverse_spec.rb:97:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.\nspec/f-tests_spec.rb:1:1: C: Naming/FileName: The name of this source file (f-tests_spec.rb) should use snake_case.\nspec/f-tests_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative 'spec_helper'\n^\nspec/f-tests_spec.rb:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"rest-client\"\n        ^^^^^^^^^^^^^\nspec/f-tests_spec.rb:7:12: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:7:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:8:9: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-1-2-3-4?guid=\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-1-2-3-4?guid=\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:9:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:9:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:10:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:11:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:11:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:12:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:12:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:13:11: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:13:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n                     ^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [89/25]\ndescribe \"FTests\" do ...\n^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:15:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ndescribe \"FTests\" do\n         ^^^^^^^^\nspec/f-tests_spec.rb:16:3: C: Metrics/BlockLength: Block has too many lines. [87/25]\n  context \"FAIR CHampion F tests\" do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:16:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  context \"FAIR CHampion F tests\" do\n          ^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.\nspec/f-tests_spec.rb:19:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      expect(\"yes\").not_to be nil\n             ^^^^^\nspec/f-tests_spec.rb:55:35: W: [Correctable] Lint/AmbiguousOperator: Ambiguous negative number operator. Parenthesize the method arguments if it's surely a negative number operator, or add a whitespace to the right of the - if it should be a subtraction.\n      expect(json['score']).to eq -1\n                                  ^\nspec/f-tests_spec.rb:70:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n    #50-rda-f1-01m-t1-metadata-pid\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/f-tests_spec.rb:90:8: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n    end    \n       ^^^^\nspec/f-tests_spec.rb:110:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.\nspec/r-tests_spec.rb:1:1: C: Naming/FileName: The name of this source file (r-tests_spec.rb) should use snake_case.\nspec/r-tests_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire_relative 'spec_helper'\n^\nspec/r-tests_spec.rb:2:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nrequire \"rest-client\"\n        ^^^^^^^^^^^^^\nspec/r-tests_spec.rb:5:12: C: [Correctable] Style/MutableConstant: Freeze mutable objects assigned to constants.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:5:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nLOCATION = \"http://localhost:4567/tests/\" # GEN3-RDA-F2-3?guid=10.7910/DVN/Z2JD58\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:6:9: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-2-3-4?guid=\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:6:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1 = LOCATION + \"GEN3-RDA-F1-2-3-4?guid=\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:7:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:7:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF21 = LOCATION + \"GEN3-RDA-F2-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:8:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:8:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF22 = LOCATION + \"GEN3-RDA-F2-2?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:9:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:9:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF23 = LOCATION + \"GEN3-RDA-F2-3?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:10:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:10:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF11 = LOCATION + \"GEN3-RDA-F1-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:11:11: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:11:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAF1d1 = LOCATION + \"GEN3-RDA-F1d-1?guid=\"\n                     ^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:12:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAR11 = LOCATION + \"GEN3-RDA-R1-1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:12:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAR11 = LOCATION + \"GEN3-RDA-R1-1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:13:8: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.\nRDAR1t1= LOCATION + \"GEN3-RDA-R1-t1?guid=\"\n       ^\nspec/r-tests_spec.rb:13:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\nRDAR1t1= LOCATION + \"GEN3-RDA-R1-t1?guid=\"\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:13:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nRDAR1t1= LOCATION + \"GEN3-RDA-R1-t1?guid=\"\n                    ^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [71/25]\ndescribe \"RTests\" do ...\n^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:15:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\ndescribe \"RTests\" do\n         ^^^^^^^^\nspec/r-tests_spec.rb:16:3: C: Metrics/BlockLength: Block has too many lines. [69/25]\n  context \"FAIR Champion R tests\" do ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:16:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  context \"FAIR Champion R tests\" do\n          ^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.\nspec/r-tests_spec.rb:19:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n      expect(\"yes\").not_to be nil\n             ^^^^^\nspec/r-tests_spec.rb:39:35: W: [Correctable] Lint/AmbiguousOperator: Ambiguous negative number operator. Parenthesize the method arguments if it's surely a negative number operator, or add a whitespace to the right of the - if it should be a subtraction.\n      expect(json['score']).to eq -1\n                                  ^\nspec/r-tests_spec.rb:55:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\nspec/r-tests_spec.rb:62:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\nspec/r-tests_spec.rb:74:35: W: [Correctable] Lint/AmbiguousOperator: Ambiguous negative number operator. Parenthesize the method arguments if it's surely a negative number operator, or add a whitespace to the right of the - if it should be a subtraction.\n      expect(json['score']).to eq -1\n                                  ^\nspec/r-tests_spec.rb:91:121: C: Layout/LineLength: Line is too long. [145/120]\n    it 'R1t1 test: test of item types should throw a warning but not fail if item type is NOT registered in IANA, but begins with vnd or priv' do\n                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\nspec/r-tests_spec.rb:97:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.\nspec/spec_helper.rb:5:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  config.example_status_persistence_file_path = \".rspec_status\"\n                                                ^^^^^^^^^^^^^^^\nswagger.rb:1:1: C: Metrics/ClassLength: Class has too many lines. [142/100]\nclass Swagger ...\n^^^^^^^^^^^^^\nswagger.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Swagger.\nclass Swagger\n^^^^^^^^^^^^^\nswagger.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nclass Swagger\n^\nswagger.rb:2:17: C: Naming/MethodName: Use snake_case for method names.\n  attr_accessor :debug, :title, :tests_metric, :description, :applies_to_principle, :organization, :org_url, ...\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:3:102: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n                :responsible_developer, :email, :developer_ORCiD, :protocol, :host, :basePath, :path, \n                                                                                                     ^\nswagger.rb:6:3: C: Metrics/AbcSize: Assignment Branch Condition size for initialize is too high. [<21, 21, 0> 29.7/17]\n  def initialize(params = {}) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:6:3: C: Metrics/MethodLength: Method has too many lines. [21/10]\n  def initialize(params = {}) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:18:5: C: Naming/VariableName: Use snake_case for variable names.\n    @developer_ORCiD = params.fetch(:developer_ORCiD)\n    ^^^^^^^^^^^^^^^^\nswagger.rb:21:5: C: Naming/VariableName: Use snake_case for variable names.\n    @basePath = params.fetch(:basePath)\n    ^^^^^^^^^\nswagger.rb:28:5: C: Naming/VariableName: Use snake_case for variable names.\n    @testedGUID = params.fetch(:testedGUID, '')\n    ^^^^^^^^^^^\nswagger.rb:35:3: C: Metrics/MethodLength: Method has too many lines. [49/10]\n  def getSwagger ...\n  ^^^^^^^^^^^^^^\nswagger.rb:35:7: C: Naming/MethodName: Use snake_case for method names.\n  def getSwagger\n      ^^^^^^^^^^\nswagger.rb:78:13: C: [Correctable] Style/HashEachMethods: Use each_key instead of keys.each.\n    schemas.keys.each do |key|\n            ^^^^^^^^^\nswagger.rb:82:13: C: [Correctable] Style/HashEachMethods: Use each_key instead of keys.each.\n    schemas.keys.each do |key|\n            ^^^^^^^^^\nswagger.rb:98:3: C: Metrics/AbcSize: Assignment Branch Condition size for triplify is too high. [<7, 48, 18> 51.74/17]\n  def triplify(s, p, o, repo) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:98:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for triplify is too high. [16/7]\n  def triplify(s, p, o, repo) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:98:3: C: Metrics/MethodLength: Method has too many lines. [36/10]\n  def triplify(s, p, o, repo) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:98:3: C: Metrics/PerceivedComplexity: Perceived complexity for triplify is too high. [19/8]\n  def triplify(s, p, o, repo) ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:98:16: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def triplify(s, p, o, repo)Warning: the running version of Bundler (2.1.4) is older than the version that created the lockfile (2.5.5). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.5.5`.\n\n               ^\nswagger.rb:98:19: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def triplify(s, p, o, repo)\n                  ^\nswagger.rb:98:22: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def triplify(s, p, o, repo)\n                     ^\nswagger.rb:124:11: C: [Correctable] Style/CaseLikeIf: Convert if-elsif to case-when.\n      o = if o.to_s =~ %r{\\A\\w+:/?/?\\w[^\\s]+} ...\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:150:21: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def self.triplify(s, p, o, repo)\n                    ^\nswagger.rb:150:24: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def self.triplify(s, p, o, repo)\n                       ^\nswagger.rb:150:27: C: Naming/MethodParameterName: Method parameter must be at least 3 characters long.\n  def self.triplify(s, p, o, repo)\n                          ^\nswagger.rb:154:7: C: Naming/MethodName: Use snake_case for method names.\n  def addComment(newcomment)\n      ^^^^^^^^^^\nswagger.rb:159:3: C: Metrics/AbcSize: Assignment Branch Condition size for createEvaluationResponse is too high. [<8, 26, 2> 27.28/17]\n  def createEvaluationResponse ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:159:3: C: Metrics/MethodLength: Method has too many lines. [16/10]\n  def createEvaluationResponse ...\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:159:7: C: Naming/MethodName: Use snake_case for method names.\n  def createEvaluationResponse\n      ^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:165:10: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n    me = protocol + '://' + host + '/' + basePath + path\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:167:5: C: Naming/VariableName: Use snake_case for variable names.\n    meURI = \"#{me}##{uri}/result-#{dt}\"\n    ^^^^^\nswagger.rb:168:5: C: Naming/VariableName: Use snake_case for variable names.\n    meURI = Addressable::URI.escape(meURI)\n    ^^^^^\nswagger.rb:168:37: C: Naming/VariableName: Use snake_case for variable names.\n    meURI = Addressable::URI.escape(meURI)\n                                    ^^^^^\nswagger.rb:170:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n             ^^^^^\nswagger.rb:172:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://semanticscience.org/resource/SIO_000300', score, g)\n             ^^^^^\nswagger.rb:173:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://purl.obolibrary.org/obo/date', dt, g)\n             ^^^^^\nswagger.rb:174:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://schema.org/softwareVersion', VERSION, g)\n             ^^^^^\nswagger.rb:175:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://semanticscience.org/resource/SIO_000332', uri, g)\n             ^^^^^\nswagger.rb:179:44: C: [Correctable] Style/NumericPredicate: Use self.comments.size.positive? instead of self.comments.size > 0.\n    comments = self.comments.join(\"\\n\") if self.comments.size > 0\n                                           ^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:179:44: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.\n    comments = self.comments.join(\"\\n\") if self.comments.size > 0\n                                           ^^^^^^^^^^^^^^^^^^^^^^\nswagger.rb:180:14: C: Naming/VariableName: Use snake_case for variable names.\n    triplify(meURI, 'http://schema.org/comment', comments, g)\n             ^^^^^\ntest.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.\nrequire 'sinatra'\n^\ntest.rb:3:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\npost \"/test\" do\n     ^^^^^^^\ntest.rb:4:3: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n  \"post test\\n\" + request.env[\"REQUEST_METHOD\"]\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntest.rb:4:31: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  \"post test\\n\" + request.env[\"REQUEST_METHOD\"]\n                              ^^^^^^^^^^^^^^^^\ntest.rb:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\nget \"/test\" do\n    ^^^^^^^\ntest.rb:8:3: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.\n  \"get test\" + request.accept.first.to_s \n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntest.rb:8:3: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  \"get test\" + request.accept.first.to_s \n  ^^^^^^^^^^\ntest.rb:8:41: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  \"get test\" + request.accept.first.to_s \n                                        ^\ntest.rb:9:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.\ntest.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\npost \"/test2\" do\n     ^^^^^^^^\ntest.rb:13:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n  #\"type \" + request.accept.first.to_s \n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntest.rb:13:39: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.\n  #\"type \" + request.accept.first.to_s \n                                      ^\ntest.rb:14:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  redirect \"/test\", 307\n           ^^^^^^^\ntest.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\npost \"/test3\" do\n     ^^^^^^^^\ntest.rb:18:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.\n  #\"type \" + request.accept.first.to_s\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntest.rb:19:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  status, headers, body = call env.merge(\"PATH_INFO\" => '/test', 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                         ^^^^^^^^^^^\ntest.rb:19:86: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.\n  status, headers, body = call env.merge(\"PATH_INFO\" => '/test', 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                     ^^^^^\ntest.rb:19:121: C: [Correctable] Layout/LineLength: Line is too long. [135/120]\n  status, headers, body = call env.merge(\"PATH_INFO\" => '/test', 'REQUEST_METHOD' => \"GET\", 'HTTP_ACCEPT' => request.accept.first.to_s)\n                                                                                                                        ^^^^^^^^^^^^^^^\n\n22 files inspected, 628 offenses detected, 433 offenses autocorrectable\n\nTip: Based on detected gems, the following RuboCop extension libraries might be helpful:\n  * rubocop-rake (https://rubygems.org/gems/rubocop-rake)\n  * rubocop-rspec (https://rubygems.org/gems/rubocop-rspec)\n\nYou can opt out of this message by adding the following to your config (see https://docs.rubocop.org/rubocop/extensions.html#extension-suggestions for more options):\n  AllCops:\n    SuggestExtensions: false",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/97/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": {}
                        }
                    ],
                    "valid": false,
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Ver": {
            "valid": true,
            "subcriteria": {
                "QC.Ver01.0": {
                    "description": "Are tags being used for releasing software",
                    "requirement_level": "MUST",
                    "hint": "Git tags are a convenient way to release software. This subcriterion checks if any git tag is present in the code history. More info on it-scm.com/book/en/v2/Git-Basics-Tagging\" target=\"_blank\">git tagging</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "The code repository uses tags for releasing new software versions",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Champion get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver01": {
                    "description": "Is the latest release compliant with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Latest tag must be compliant with <a href=\"https://semver.org\" target=\"_blank\">SemVer specification</a>",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "Latest release tag 1.0.0 is SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Champion get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                },
                "QC.Ver02": {
                    "description": "Are all release tags with Semantic Versioning (SemVer) specification?",
                    "requirement_level": "SHOULD",
                    "hint": "Existent release tags shall be <a href=\"https://semver.org\" target=\"_blank\">SemVer</a> compliant for this subcriterion to be successful",
                    "evidence": [
                        {
                            "valid": true,
                            "message": "All release tags are SemVer compliant",
                            "plugin": {
                                "name": "report2sqaaas-plugin-is_semver",
                                "version": "2.1.0"
                            },
                            "tool": {
                                "name": "get_git_tags.py",
                                "lang": "Semantic Versioning",
                                "version": "latest",
                                "docker": {
                                    "dockerfile": "QC.Ver/Dockerfile",
                                    "reviewed": "2022-05-10"
                                },
                                "ci": {
                                    "name": "QC.Ver github.com/OSTrails/FAIR-Champion get_git_tags.py",
                                    "status": "SUCCESS",
                                    "stdout_command": [
                                        "get_git_tags.py"
                                    ],
                                    "stdout_text": "['1.0.0']",
                                    "url": "https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/FAIR-Champion.git.assess.sqaaas/job/master/1/execution/node/106/log?consoleFull"
                                },
                                "level": "REQUIRED",
                                "build_repo": "https://github.com/eosc-synergy/FAIR-Champion.git.assess.sqaaas"
                            },
                            "standard": {
                                "title": "A set of Common Software Quality Assurance Baseline Criteria for Research Projects",
                                "version": "v4.0",
                                "url": "https://github.com/indigo-dc/sqa-baseline/releases/tag/v4.0"
                            },
                            "data_unstructured": [
                                "1.0.0"
                            ]
                        }
                    ],
                    "valid": true
                }
            },
            "coverage": {
                "percentage": 100,
                "total_subcriteria": 3,
                "success_subcriteria": 3
            }
        },
        "QC.Met": {
            "valid": false,
            "subcriteria": {
                "QC.Met01": {
                    "description": "Is the software citable?",
                    "valid": false,
                    "hint": "The two formats for software citation supported by SQAaaS are: 1) <a href=\"https://codemeta.github.io/\" target=\"_blank\">CodeMeta</a> and 2) <a href=\"https://citation-file-format.github.io/\" target=\"_blank\">Citation File Format (CFF)</a>. While CodeMeta provides you with a more comprehensive description, CFF is a more lightweight, good-enough approach to software (with built-in support by GitHub) citation. Both provide tools (<a href=\"https://codemeta.github.io/codemeta-generator/\" target=\"_blank\">CodeMeta generator</a>, <a href=\"https://citation-file-format.github.io/cff-initializer-javascript/#/\" target=\"_blank\">CFFINIT</a>)to easily generate a working citation file. Once having the file, be sure to add it to the root path of your code repo.",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <CodeMeta> in repository searching by extensions or filenames\nNo matching files found for language <Citation File Format> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Sec": {
            "valid": false,
            "subcriteria": {
                "QC.Sec02": {
                    "description": "Is the source code passing Static Analysis Security Testing (SAST)?",
                    "valid": false,
                    "hint": "Please check & solve the security weaknesses found by the SAST tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <Python> in repository searching by extensions or filenames\nNo matching files found for language <Go> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        },
        "QC.Uni": {
            "valid": false,
            "subcriteria": {
                "QC.Uni01": {
                    "description": "Are the tests passing through an automated means?",
                    "valid": false,
                    "hint": "Please check & solve the failing test cases found by the {tool_name} tool",
                    "evidence": [
                        {
                            "valid": false,
                            "message": "No matching files found for language <Python> in repository searching by extensions or filenames"
                        }
                    ],
                    "required_for_next_level_badge": false
                }
            },
            "coverage": {
                "percentage": 0,
                "total_subcriteria": 1,
                "success_subcriteria": 0
            }
        }
    },
    "badge": {
        "software": {
            "criteria": {
                "bronze": {
                    "to_fulfill": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Doc"
                    ],
                    "missing": [
                        "QC.Doc"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic"
                    ]
                },
                "silver": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Doc",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met"
                    ],
                    "missing": [
                        "QC.Doc",
                        "QC.Met"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Ver"
                    ]
                },
                "gold": {
                    "to_fulfill": [
                        "QC.Lic",
                        "QC.Uni",
                        "QC.Doc",
                        "QC.Acc",
                        "QC.Ver",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty"
                    ],
                    "missing": [
                        "QC.Uni",
                        "QC.Doc",
                        "QC.Met",
                        "QC.Sec",
                        "QC.Sty"
                    ],
                    "fulfilled": [
                        "QC.Acc",
                        "QC.Lic",
                        "QC.Ver"
                    ]
                }
            },
            "data": {}
        }
    }
}